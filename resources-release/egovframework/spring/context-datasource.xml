<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

	<!--
		#### Apache Common DBCP removeAbandoned 옵션 설명 ####
		validationQuery 					: db connection 끊김 방지 샘플 쿼리
		testOnBorrow 						: 커넥션 풀에서 커넥션을 가져올때 해당 커넥션의 유효성 검사를 할것인지 여부. (기본값 : true, 반드시 validationQuery 가 설정되어 있어야 함.)
		testWhileIdle 						: "true" 해야 evitor가 timeBetweenEvictionRunsMillis 마다 validationQuery 작동 하며 	minEvictableIdleTimeMillis 이상 사용되지 않은 connection은 validationQuery 대신 연결해제 시키고 새로운 connection 을 생성함.
		timeBetweenEvictionRunsMillis	: 설정된 시간 간격마다 놀고 있는 커넥션을 풀에서 제거하는 evictor thread 가 실행된다. minIdle 로 커넥션을 유지한다.
		minEvictableIdleTimeMillis 		: evictor thread 작업시 설정된 시간만큼 사용되지 않은 커넥션을 제거한다. 그리고, thestWhileIdle 옵션이 true일 경우 설정된 시간을 초과하지 않은 커넥션에 대해서 validationQuery를 수행해서 유효하지 않은 커넥션을 제거한다.
		removeAbandoned				:  - default false.
												   - Flag to remove abandoned connections if they exceed the removeAbandonedTimout. (removeAbadonedTimeout 에 지정된 시간이 지났을 때 버려진 연결을 제거한다.)
												   - If set to true a connection is considered abandoned and eligible for removal if it has not been used for longer than the removeAbandonedTimeout. (true 로 설정하면 removeAbandonedTimeout 에 지정된 시간이상 사용하지 않은 경우는 연결이 중단되어 제거 가능한 것으로 간주한다.)
												   - Creating a Statement, PreparedStatement or CallableStatement or using one of these to execute a query (using one of the execute methods) resets the lastUsed property of the parent connection. (Statement, PreparedStatement 또는 CallableStatement 를 생성하거나, 이들을 이용하여 하나 이상의 쿼리가 실행 되면, connection의 lastUsed 속성이 초기화 된다.)
												   - Setting this to true can recover db connections from poorly written applications which fail to close a connection. (true 로 설정하면 어플리케이션에서 연결을 종료하는데 실패한 db connection 을 복구 할 수 있다.)
		removeAbadonedTimeout		: - default 300.
												  - Timeout in seconds before an abandoned connection can be removed. ( 버려진 여결을 삭제하기 전 대기 시간을 설정한다. )
		logAbandoned						: - default false
												  - Flag to log stack traces for application code which abandoned a Statement or Connection. (설정을 할 경우 버려진 연결에 대해 stack trace 에 기록한다.)
												  - Logging of abandoned Statements and Connections adds overhead for every Connection open or new Statement because a stack trace has to be generated.
												  	(기록을 남기길 원할 경우 모든 오버해드가 발생한다.)
	 -->
	<!--
	<jdbc:embedded-database id="dataSourceSpied" type="HSQL">
		<jdbc:script location= "classpath:/db/sampledb.sql"/>
	</jdbc:embedded-database>
	-->

	<!-- ORACLE -->
<!-- 	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
<!-- 		<property name="url" value="jdbc:oracle:thin:@112.220.89.100:1521:orcl"/> -->
<!-- 		<property name="username" value="common_ora"/> -->
<!-- 		<property name="password" value="common_ora"/> -->
<!-- 	</bean> -->

	<!-- hikariCP 사용 -->
	<bean id="dataSourceSpied" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg>
			<bean class="com.zaxxer.hikari.HikariConfig">
				<constructor-arg>
					<props>
						<!-- ORACLE -->
						<!-- <prop key="jdbcUrl">jdbc:oracle:thin:@112.220.89.100:1521:orcl</prop>
						<prop key="username">common_ora</prop>
						<prop key="password">common_ora</prop> -->
						<!-- MYSQL -->
						<!-- <prop key="jdbcUrl">jdbc:mysql://117.17.241.227:3306/pharmai?useUnicode=yes&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=Asia/Seoul</prop> -->
						<prop key="jdbcUrl">jdbc:mysql://127.0.0.1:3306/pharmai?useUnicode=yes&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=Asia/Seoul</prop>
						<prop key="username">pharmai</prop>
						<prop key="password">pharmai!</prop>
					</props>
				</constructor-arg>
				<!-- ORACLE -->
				<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
				<!-- MYSQL -->
				<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
				<property name="minimumIdle" value="5" />
				<property name="maximumPoolSize" value="12" />
				<!-- 기본 30분(1800000) -->
				<property name="maxLifetime" value="1800000" />
<!-- 				<property name="connectionTestQuery" value="SELECT 1 FROM DUAL" /> -->
<!-- 				<property name="connectionTimeout"  value="300000" /> -->
			</bean>
		</constructor-arg>
	</bean>

	<bean id="dataSourceMain" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL :  "/>
			</bean>
		</property>
	</bean>

	<!-- hsql
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
		<property name="url" value="jdbc:log4jdbc:hsqldb:hsql://localhost/sampledb"/>
		<property name="username" value="sa"/>
	</bean>
	-->

	<!-- Mysql
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/example" />
		<property name="username" value="user"/>
		<property name="password" value="password"/>
	</bean>
	-->

	<!-- oracle
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:example" />
		<property name="username" value="user"/>
		<property name="password" value="password"/>
	</bean>
	-->

</beans>
